/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package demo.customermanagement.core.dto.kafkaresponse;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class engagedParty_record extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2083908105125066881L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"engagedParty_record\",\"namespace\":\"demo.customermanagement.core.dto.kafkaresponse\",\"fields\":[{\"name\":\"at_referredType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"givenName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"middleName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"familyName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fullName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"gender\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"birthDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nationality\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"individualIdentification\",\"type\":{\"type\":\"record\",\"name\":\"individualIdentification_record\",\"fields\":[{\"name\":\"identificationId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"identificationType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"issuingDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"issuingAuthority\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeOfIssue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"validFor\",\"type\":{\"type\":\"record\",\"name\":\"validFor_record\",\"fields\":[{\"name\":\"startDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"endDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}]}},{\"name\":\"contactMedium\",\"type\":{\"type\":\"record\",\"name\":\"contactMedium_record\",\"fields\":[{\"name\":\"mediumType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"characteristic\",\"type\":{\"type\":\"record\",\"name\":\"characteristic_record\",\"fields\":[{\"name\":\"emailAddress\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"phoneNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}]}},{\"name\":\"partyCharacteristic\",\"type\":{\"type\":\"record\",\"name\":\"partyCharacteristic_record\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"valueType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<engagedParty_record> ENCODER =
      new BinaryMessageEncoder<engagedParty_record>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<engagedParty_record> DECODER =
      new BinaryMessageDecoder<engagedParty_record>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<engagedParty_record> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<engagedParty_record> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<engagedParty_record>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this engagedParty_record to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a engagedParty_record from a ByteBuffer. */
  public static engagedParty_record fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String at_referredType;
   private java.lang.String givenName;
   private java.lang.String middleName;
   private java.lang.String familyName;
   private java.lang.String fullName;
   private java.lang.String gender;
   private java.lang.String birthDate;
   private java.lang.String nationality;
   private individualIdentification_record individualIdentification;
   private contactMedium_record contactMedium;
   private partyCharacteristic_record partyCharacteristic;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public engagedParty_record() {}

  /**
   * All-args constructor.
   * @param at_referredType The new value for at_referredType
   * @param givenName The new value for givenName
   * @param middleName The new value for middleName
   * @param familyName The new value for familyName
   * @param fullName The new value for fullName
   * @param gender The new value for gender
   * @param birthDate The new value for birthDate
   * @param nationality The new value for nationality
   * @param individualIdentification The new value for individualIdentification
   * @param contactMedium The new value for contactMedium
   * @param partyCharacteristic The new value for partyCharacteristic
   */
  public engagedParty_record(java.lang.String at_referredType, java.lang.String givenName, java.lang.String middleName, java.lang.String familyName, java.lang.String fullName, java.lang.String gender, java.lang.String birthDate, java.lang.String nationality, individualIdentification_record individualIdentification, contactMedium_record contactMedium, partyCharacteristic_record partyCharacteristic) {
    this.at_referredType = at_referredType;
    this.givenName = givenName;
    this.middleName = middleName;
    this.familyName = familyName;
    this.fullName = fullName;
    this.gender = gender;
    this.birthDate = birthDate;
    this.nationality = nationality;
    this.individualIdentification = individualIdentification;
    this.contactMedium = contactMedium;
    this.partyCharacteristic = partyCharacteristic;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return at_referredType;
    case 1: return givenName;
    case 2: return middleName;
    case 3: return familyName;
    case 4: return fullName;
    case 5: return gender;
    case 6: return birthDate;
    case 7: return nationality;
    case 8: return individualIdentification;
    case 9: return contactMedium;
    case 10: return partyCharacteristic;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: at_referredType = (java.lang.String)value$; break;
    case 1: givenName = (java.lang.String)value$; break;
    case 2: middleName = (java.lang.String)value$; break;
    case 3: familyName = (java.lang.String)value$; break;
    case 4: fullName = (java.lang.String)value$; break;
    case 5: gender = (java.lang.String)value$; break;
    case 6: birthDate = (java.lang.String)value$; break;
    case 7: nationality = (java.lang.String)value$; break;
    case 8: individualIdentification = (individualIdentification_record)value$; break;
    case 9: contactMedium = (contactMedium_record)value$; break;
    case 10: partyCharacteristic = (partyCharacteristic_record)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'at_referredType' field.
   * @return The value of the 'at_referredType' field.
   */
  public java.lang.String getAtReferredType() {
    return at_referredType;
  }


  /**
   * Gets the value of the 'givenName' field.
   * @return The value of the 'givenName' field.
   */
  public java.lang.String getGivenName() {
    return givenName;
  }


  /**
   * Gets the value of the 'middleName' field.
   * @return The value of the 'middleName' field.
   */
  public java.lang.String getMiddleName() {
    return middleName;
  }


  /**
   * Gets the value of the 'familyName' field.
   * @return The value of the 'familyName' field.
   */
  public java.lang.String getFamilyName() {
    return familyName;
  }


  /**
   * Gets the value of the 'fullName' field.
   * @return The value of the 'fullName' field.
   */
  public java.lang.String getFullName() {
    return fullName;
  }


  /**
   * Gets the value of the 'gender' field.
   * @return The value of the 'gender' field.
   */
  public java.lang.String getGender() {
    return gender;
  }


  /**
   * Gets the value of the 'birthDate' field.
   * @return The value of the 'birthDate' field.
   */
  public java.lang.String getBirthDate() {
    return birthDate;
  }


  /**
   * Gets the value of the 'nationality' field.
   * @return The value of the 'nationality' field.
   */
  public java.lang.String getNationality() {
    return nationality;
  }


  /**
   * Gets the value of the 'individualIdentification' field.
   * @return The value of the 'individualIdentification' field.
   */
  public individualIdentification_record getIndividualIdentification() {
    return individualIdentification;
  }


  /**
   * Gets the value of the 'contactMedium' field.
   * @return The value of the 'contactMedium' field.
   */
  public contactMedium_record getContactMedium() {
    return contactMedium;
  }


  /**
   * Gets the value of the 'partyCharacteristic' field.
   * @return The value of the 'partyCharacteristic' field.
   */
  public partyCharacteristic_record getPartyCharacteristic() {
    return partyCharacteristic;
  }


  /**
   * Creates a new engagedParty_record RecordBuilder.
   * @return A new engagedParty_record RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new engagedParty_record RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new engagedParty_record RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new engagedParty_record RecordBuilder by copying an existing engagedParty_record instance.
   * @param other The existing instance to copy.
   * @return A new engagedParty_record RecordBuilder
   */
  public static Builder newBuilder(engagedParty_record other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for engagedParty_record instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<engagedParty_record>
    implements org.apache.avro.data.RecordBuilder<engagedParty_record> {

    private java.lang.String at_referredType;
    private java.lang.String givenName;
    private java.lang.String middleName;
    private java.lang.String familyName;
    private java.lang.String fullName;
    private java.lang.String gender;
    private java.lang.String birthDate;
    private java.lang.String nationality;
    private individualIdentification_record individualIdentification;
    private individualIdentification_record.Builder individualIdentificationBuilder;
    private contactMedium_record contactMedium;
    private contactMedium_record.Builder contactMediumBuilder;
    private partyCharacteristic_record partyCharacteristic;
    private partyCharacteristic_record.Builder partyCharacteristicBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.at_referredType)) {
        this.at_referredType = data().deepCopy(fields()[0].schema(), other.at_referredType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.givenName)) {
        this.givenName = data().deepCopy(fields()[1].schema(), other.givenName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.middleName)) {
        this.middleName = data().deepCopy(fields()[2].schema(), other.middleName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.familyName)) {
        this.familyName = data().deepCopy(fields()[3].schema(), other.familyName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fullName)) {
        this.fullName = data().deepCopy(fields()[4].schema(), other.fullName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.gender)) {
        this.gender = data().deepCopy(fields()[5].schema(), other.gender);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.birthDate)) {
        this.birthDate = data().deepCopy(fields()[6].schema(), other.birthDate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.nationality)) {
        this.nationality = data().deepCopy(fields()[7].schema(), other.nationality);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.individualIdentification)) {
        this.individualIdentification = data().deepCopy(fields()[8].schema(), other.individualIdentification);
        fieldSetFlags()[8] = true;
      }
      if (other.hasIndividualIdentificationBuilder()) {
        this.individualIdentificationBuilder = individualIdentification_record.newBuilder(other.getIndividualIdentificationBuilder());
      }
      if (isValidValue(fields()[9], other.contactMedium)) {
        this.contactMedium = data().deepCopy(fields()[9].schema(), other.contactMedium);
        fieldSetFlags()[9] = true;
      }
      if (other.hasContactMediumBuilder()) {
        this.contactMediumBuilder = contactMedium_record.newBuilder(other.getContactMediumBuilder());
      }
      if (isValidValue(fields()[10], other.partyCharacteristic)) {
        this.partyCharacteristic = data().deepCopy(fields()[10].schema(), other.partyCharacteristic);
        fieldSetFlags()[10] = true;
      }
      if (other.hasPartyCharacteristicBuilder()) {
        this.partyCharacteristicBuilder = partyCharacteristic_record.newBuilder(other.getPartyCharacteristicBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing engagedParty_record instance
     * @param other The existing instance to copy.
     */
    private Builder(engagedParty_record other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.at_referredType)) {
        this.at_referredType = data().deepCopy(fields()[0].schema(), other.at_referredType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.givenName)) {
        this.givenName = data().deepCopy(fields()[1].schema(), other.givenName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.middleName)) {
        this.middleName = data().deepCopy(fields()[2].schema(), other.middleName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.familyName)) {
        this.familyName = data().deepCopy(fields()[3].schema(), other.familyName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fullName)) {
        this.fullName = data().deepCopy(fields()[4].schema(), other.fullName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.gender)) {
        this.gender = data().deepCopy(fields()[5].schema(), other.gender);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.birthDate)) {
        this.birthDate = data().deepCopy(fields()[6].schema(), other.birthDate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.nationality)) {
        this.nationality = data().deepCopy(fields()[7].schema(), other.nationality);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.individualIdentification)) {
        this.individualIdentification = data().deepCopy(fields()[8].schema(), other.individualIdentification);
        fieldSetFlags()[8] = true;
      }
      this.individualIdentificationBuilder = null;
      if (isValidValue(fields()[9], other.contactMedium)) {
        this.contactMedium = data().deepCopy(fields()[9].schema(), other.contactMedium);
        fieldSetFlags()[9] = true;
      }
      this.contactMediumBuilder = null;
      if (isValidValue(fields()[10], other.partyCharacteristic)) {
        this.partyCharacteristic = data().deepCopy(fields()[10].schema(), other.partyCharacteristic);
        fieldSetFlags()[10] = true;
      }
      this.partyCharacteristicBuilder = null;
    }

    /**
      * Gets the value of the 'at_referredType' field.
      * @return The value.
      */
    public java.lang.String getAtReferredType() {
      return at_referredType;
    }

    /**
      * Sets the value of the 'at_referredType' field.
      * @param value The value of 'at_referredType'.
      * @return This builder.
      */
    public Builder setAtReferredType(java.lang.String value) {
      validate(fields()[0], value);
      this.at_referredType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'at_referredType' field has been set.
      * @return True if the 'at_referredType' field has been set, false otherwise.
      */
    public boolean hasAtReferredType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'at_referredType' field.
      * @return This builder.
      */
    public Builder clearAtReferredType() {
      at_referredType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'givenName' field.
      * @return The value.
      */
    public java.lang.String getGivenName() {
      return givenName;
    }

    /**
      * Sets the value of the 'givenName' field.
      * @param value The value of 'givenName'.
      * @return This builder.
      */
    public Builder setGivenName(java.lang.String value) {
      validate(fields()[1], value);
      this.givenName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'givenName' field has been set.
      * @return True if the 'givenName' field has been set, false otherwise.
      */
    public boolean hasGivenName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'givenName' field.
      * @return This builder.
      */
    public Builder clearGivenName() {
      givenName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'middleName' field.
      * @return The value.
      */
    public java.lang.String getMiddleName() {
      return middleName;
    }

    /**
      * Sets the value of the 'middleName' field.
      * @param value The value of 'middleName'.
      * @return This builder.
      */
    public Builder setMiddleName(java.lang.String value) {
      validate(fields()[2], value);
      this.middleName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'middleName' field has been set.
      * @return True if the 'middleName' field has been set, false otherwise.
      */
    public boolean hasMiddleName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'middleName' field.
      * @return This builder.
      */
    public Builder clearMiddleName() {
      middleName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'familyName' field.
      * @return The value.
      */
    public java.lang.String getFamilyName() {
      return familyName;
    }

    /**
      * Sets the value of the 'familyName' field.
      * @param value The value of 'familyName'.
      * @return This builder.
      */
    public Builder setFamilyName(java.lang.String value) {
      validate(fields()[3], value);
      this.familyName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'familyName' field has been set.
      * @return True if the 'familyName' field has been set, false otherwise.
      */
    public boolean hasFamilyName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'familyName' field.
      * @return This builder.
      */
    public Builder clearFamilyName() {
      familyName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'fullName' field.
      * @return The value.
      */
    public java.lang.String getFullName() {
      return fullName;
    }

    /**
      * Sets the value of the 'fullName' field.
      * @param value The value of 'fullName'.
      * @return This builder.
      */
    public Builder setFullName(java.lang.String value) {
      validate(fields()[4], value);
      this.fullName = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'fullName' field has been set.
      * @return True if the 'fullName' field has been set, false otherwise.
      */
    public boolean hasFullName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'fullName' field.
      * @return This builder.
      */
    public Builder clearFullName() {
      fullName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'gender' field.
      * @return The value.
      */
    public java.lang.String getGender() {
      return gender;
    }

    /**
      * Sets the value of the 'gender' field.
      * @param value The value of 'gender'.
      * @return This builder.
      */
    public Builder setGender(java.lang.String value) {
      validate(fields()[5], value);
      this.gender = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'gender' field has been set.
      * @return True if the 'gender' field has been set, false otherwise.
      */
    public boolean hasGender() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'gender' field.
      * @return This builder.
      */
    public Builder clearGender() {
      gender = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthDate' field.
      * @return The value.
      */
    public java.lang.String getBirthDate() {
      return birthDate;
    }

    /**
      * Sets the value of the 'birthDate' field.
      * @param value The value of 'birthDate'.
      * @return This builder.
      */
    public Builder setBirthDate(java.lang.String value) {
      validate(fields()[6], value);
      this.birthDate = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'birthDate' field has been set.
      * @return True if the 'birthDate' field has been set, false otherwise.
      */
    public boolean hasBirthDate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'birthDate' field.
      * @return This builder.
      */
    public Builder clearBirthDate() {
      birthDate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'nationality' field.
      * @return The value.
      */
    public java.lang.String getNationality() {
      return nationality;
    }

    /**
      * Sets the value of the 'nationality' field.
      * @param value The value of 'nationality'.
      * @return This builder.
      */
    public Builder setNationality(java.lang.String value) {
      validate(fields()[7], value);
      this.nationality = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'nationality' field has been set.
      * @return True if the 'nationality' field has been set, false otherwise.
      */
    public boolean hasNationality() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'nationality' field.
      * @return This builder.
      */
    public Builder clearNationality() {
      nationality = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'individualIdentification' field.
      * @return The value.
      */
    public individualIdentification_record getIndividualIdentification() {
      return individualIdentification;
    }

    /**
      * Sets the value of the 'individualIdentification' field.
      * @param value The value of 'individualIdentification'.
      * @return This builder.
      */
    public Builder setIndividualIdentification(individualIdentification_record value) {
      validate(fields()[8], value);
      this.individualIdentificationBuilder = null;
      this.individualIdentification = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'individualIdentification' field has been set.
      * @return True if the 'individualIdentification' field has been set, false otherwise.
      */
    public boolean hasIndividualIdentification() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'individualIdentification' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public individualIdentification_record.Builder getIndividualIdentificationBuilder() {
      if (individualIdentificationBuilder == null) {
        if (hasIndividualIdentification()) {
          setIndividualIdentificationBuilder(individualIdentification_record.newBuilder(individualIdentification));
        } else {
          setIndividualIdentificationBuilder(individualIdentification_record.newBuilder());
        }
      }
      return individualIdentificationBuilder;
    }

    /**
     * Sets the Builder instance for the 'individualIdentification' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Builder setIndividualIdentificationBuilder(individualIdentification_record.Builder value) {
      clearIndividualIdentification();
      individualIdentificationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'individualIdentification' field has an active Builder instance
     * @return True if the 'individualIdentification' field has an active Builder instance
     */
    public boolean hasIndividualIdentificationBuilder() {
      return individualIdentificationBuilder != null;
    }

    /**
      * Clears the value of the 'individualIdentification' field.
      * @return This builder.
      */
    public Builder clearIndividualIdentification() {
      individualIdentification = null;
      individualIdentificationBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'contactMedium' field.
      * @return The value.
      */
    public contactMedium_record getContactMedium() {
      return contactMedium;
    }

    /**
      * Sets the value of the 'contactMedium' field.
      * @param value The value of 'contactMedium'.
      * @return This builder.
      */
    public Builder setContactMedium(contactMedium_record value) {
      validate(fields()[9], value);
      this.contactMediumBuilder = null;
      this.contactMedium = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'contactMedium' field has been set.
      * @return True if the 'contactMedium' field has been set, false otherwise.
      */
    public boolean hasContactMedium() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'contactMedium' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public contactMedium_record.Builder getContactMediumBuilder() {
      if (contactMediumBuilder == null) {
        if (hasContactMedium()) {
          setContactMediumBuilder(contactMedium_record.newBuilder(contactMedium));
        } else {
          setContactMediumBuilder(contactMedium_record.newBuilder());
        }
      }
      return contactMediumBuilder;
    }

    /**
     * Sets the Builder instance for the 'contactMedium' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Builder setContactMediumBuilder(contactMedium_record.Builder value) {
      clearContactMedium();
      contactMediumBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'contactMedium' field has an active Builder instance
     * @return True if the 'contactMedium' field has an active Builder instance
     */
    public boolean hasContactMediumBuilder() {
      return contactMediumBuilder != null;
    }

    /**
      * Clears the value of the 'contactMedium' field.
      * @return This builder.
      */
    public Builder clearContactMedium() {
      contactMedium = null;
      contactMediumBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'partyCharacteristic' field.
      * @return The value.
      */
    public partyCharacteristic_record getPartyCharacteristic() {
      return partyCharacteristic;
    }

    /**
      * Sets the value of the 'partyCharacteristic' field.
      * @param value The value of 'partyCharacteristic'.
      * @return This builder.
      */
    public Builder setPartyCharacteristic(partyCharacteristic_record value) {
      validate(fields()[10], value);
      this.partyCharacteristicBuilder = null;
      this.partyCharacteristic = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'partyCharacteristic' field has been set.
      * @return True if the 'partyCharacteristic' field has been set, false otherwise.
      */
    public boolean hasPartyCharacteristic() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'partyCharacteristic' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public partyCharacteristic_record.Builder getPartyCharacteristicBuilder() {
      if (partyCharacteristicBuilder == null) {
        if (hasPartyCharacteristic()) {
          setPartyCharacteristicBuilder(partyCharacteristic_record.newBuilder(partyCharacteristic));
        } else {
          setPartyCharacteristicBuilder(partyCharacteristic_record.newBuilder());
        }
      }
      return partyCharacteristicBuilder;
    }

    /**
     * Sets the Builder instance for the 'partyCharacteristic' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Builder setPartyCharacteristicBuilder(partyCharacteristic_record.Builder value) {
      clearPartyCharacteristic();
      partyCharacteristicBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'partyCharacteristic' field has an active Builder instance
     * @return True if the 'partyCharacteristic' field has an active Builder instance
     */
    public boolean hasPartyCharacteristicBuilder() {
      return partyCharacteristicBuilder != null;
    }

    /**
      * Clears the value of the 'partyCharacteristic' field.
      * @return This builder.
      */
    public Builder clearPartyCharacteristic() {
      partyCharacteristic = null;
      partyCharacteristicBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public engagedParty_record build() {
      try {
        engagedParty_record record = new engagedParty_record();
        record.at_referredType = fieldSetFlags()[0] ? this.at_referredType : (java.lang.String) defaultValue(fields()[0]);
        record.givenName = fieldSetFlags()[1] ? this.givenName : (java.lang.String) defaultValue(fields()[1]);
        record.middleName = fieldSetFlags()[2] ? this.middleName : (java.lang.String) defaultValue(fields()[2]);
        record.familyName = fieldSetFlags()[3] ? this.familyName : (java.lang.String) defaultValue(fields()[3]);
        record.fullName = fieldSetFlags()[4] ? this.fullName : (java.lang.String) defaultValue(fields()[4]);
        record.gender = fieldSetFlags()[5] ? this.gender : (java.lang.String) defaultValue(fields()[5]);
        record.birthDate = fieldSetFlags()[6] ? this.birthDate : (java.lang.String) defaultValue(fields()[6]);
        record.nationality = fieldSetFlags()[7] ? this.nationality : (java.lang.String) defaultValue(fields()[7]);
        if (individualIdentificationBuilder != null) {
          record.individualIdentification = this.individualIdentificationBuilder.build();
        } else {
          record.individualIdentification = fieldSetFlags()[8] ? this.individualIdentification : (individualIdentification_record) defaultValue(fields()[8]);
        }
        if (contactMediumBuilder != null) {
          record.contactMedium = this.contactMediumBuilder.build();
        } else {
          record.contactMedium = fieldSetFlags()[9] ? this.contactMedium : (contactMedium_record) defaultValue(fields()[9]);
        }
        if (partyCharacteristicBuilder != null) {
          record.partyCharacteristic = this.partyCharacteristicBuilder.build();
        } else {
          record.partyCharacteristic = fieldSetFlags()[10] ? this.partyCharacteristic : (partyCharacteristic_record) defaultValue(fields()[10]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<engagedParty_record>
    WRITER$ = (org.apache.avro.io.DatumWriter<engagedParty_record>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<engagedParty_record>
    READER$ = (org.apache.avro.io.DatumReader<engagedParty_record>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
